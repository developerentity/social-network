{"version":3,"sources":["components/Messages/Messages.module.css","components/Messages/DialogItem/DialogItem.js","components/Messages/Message/Message.js","components/Messages/Messages.js"],"names":["module","exports","DialogItem","props","className","style","dialog","to","id","activeClassName","act","name","Message","message","AddMessageForm","onSubmit","render","handleSubmit","form","submitting","pristine","validate","composeValidators","required","minLength","input","meta","placeholder","error","touched","type","disabled","onClick","reset","withAuthRedirect","dispatch","useDispatch","dialogsData","useSelector","state","messagePage","messagesData","dialogsElements","map","person","key","messagesElements","m","toString","dialogs","dialogsItems","messages","val","addMessage","newMessageBody"],"mappings":"yHACAA,EAAOC,QAAU,CAAC,QAAU,0BAA0B,aAAe,+BAA+B,OAAS,yBAAyB,IAAM,sBAAsB,SAAW,2BAA2B,QAAU,4B,qFCanMC,EAVI,SAACC,GAChB,OACI,yBAAKC,UAAWC,IAAMC,QAClB,kBAAC,IAAD,CAASC,GAAE,oBAAeJ,EAAMK,IAAMC,gBAAiBJ,IAAMK,KACxDP,EAAMQ,QCKRC,EAVC,SAACT,GACb,OACI,yBAAKC,UAAWC,IAAMQ,SACjBV,EAAMU,QACP,6BACA,+B,uCCuCNC,EAAiB,SAACX,GAEpB,OACI,oCACI,kBAAC,IAAD,CACIY,SAAUZ,EAAMY,SAChBC,OAAQ,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,WAAYC,EAAnC,EAAmCA,SAAnC,OACJ,0BAAML,SAAUE,GACZ,kBAAC,IAAD,CACIN,KAAK,iBACLU,SAAUC,YAAkBC,IAAUC,YAAU,MAE/C,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACG,6BACI,8CACA,8CAAcD,EAAd,CAAqBE,YAAY,mBAChCD,EAAKE,OAASF,EAAKG,SAAW,8BAAOH,EAAKE,WAMvD,yBAAKxB,UAAU,WACX,4BAAQ0B,KAAK,SAASC,SAAUZ,GAAhC,UAGA,4BACIW,KAAK,SACLE,QAASd,EAAKe,MACdF,SAAUZ,GAAcC,GAH5B,gBAebc,uBA9EE,WAEb,IAAMC,EAAWC,cACXC,EAAcC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYH,eACrDI,EAAeH,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYC,gBAExDC,EAAkBL,EACjBM,KAAI,SAAAC,GAAM,OAAI,kBAAC,EAAD,CAAYC,IAAKD,EAAOpC,GAAIA,GAAIoC,EAAOpC,GAAIG,KAAMiC,EAAOjC,UAEvEmC,EAAmBL,EAClBE,KAAI,SAAA9B,GAAO,OAAI,kBAAC,EAAD,CAASgC,IAAKhC,EAAQkC,EAAEC,WAAYnC,QAASA,EAAQkC,OAMzE,OACI,yBAAK3C,UAAWC,IAAM4C,SAClB,yBAAK7C,UAAWC,IAAM6C,cAEjBR,GAGL,yBAAKtC,UAAWC,IAAM8C,UAEjBL,GAGL,6BACI,kBAAC,EAAD,CACI/B,SAlBM,SAACqC,GACnBjB,EAASkB,YAAWD,EAAIE","file":"static/js/4.69ebb9b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Messages_dialogs__-Pvq7\",\"dialogsItems\":\"Messages_dialogsItems__3qjNx\",\"dialog\":\"Messages_dialog__2A3LA\",\"act\":\"Messages_act__3MJ1h\",\"messages\":\"Messages_messages__24vfu\",\"message\":\"Messages_message__ZlNvM\"};","import React from 'react';\nimport style from './../Messages.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst DialogItem = (props) => {\n    return (\n        <div className={style.dialog}>\n            <NavLink to={`/messages/${props.id}`} activeClassName={style.act}>\n                {props.name}\n            </NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;","import React from 'react';\nimport style from './../Messages.module.css';\n\nconst Message = (props) => {\n    return (\n        <div className={style.message}>\n            {props.message}\n            <br />\n            <br />\n        </div>\n    )\n}\n\nexport default Message;","import React from 'react';\nimport style from './Messages.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { Form, Field } from 'react-final-form'\nimport { composeValidators, minLength, required } from '../../util/validators';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { addMessage } from './../../redux/dialogsReducer';\n\nconst Messages = () => {\n\n    const dispatch = useDispatch()\n    const dialogsData = useSelector(state => state.messagePage.dialogsData)\n    const messagesData = useSelector(state => state.messagePage.messagesData)\n\n    let dialogsElements = dialogsData\n        .map(person => <DialogItem key={person.id} id={person.id} name={person.name} />)\n\n    let messagesElements = messagesData\n        .map(message => <Message key={message.m.toString()} message={message.m} />)\n\n    const addNewMessage = (val) => {\n        dispatch(addMessage(val.newMessageBody))\n    }\n\n    return (\n        <div className={style.dialogs}>\n            <div className={style.dialogsItems}>\n\n                {dialogsElements}\n\n            </div>\n            <div className={style.messages}>\n\n                {messagesElements}\n\n            </div>\n            <div>\n                <AddMessageForm\n                    onSubmit={addNewMessage}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst AddMessageForm = (props) => {\n\n    return (\n        <>\n            <Form\n                onSubmit={props.onSubmit}\n                render={({ handleSubmit, form, submitting, pristine }) => (\n                    <form onSubmit={handleSubmit}>\n                        <Field\n                            name=\"newMessageBody\"\n                            validate={composeValidators(required, minLength(3))}\n                        >\n                            {({ input, meta }) => (\n                                <div>\n                                    <label>New message</label>\n                                    <textarea {...input} placeholder=\"Enter message\" />\n                                    {meta.error && meta.touched && <span>{meta.error}</span>}\n                                </div>\n                            )}\n                        </Field>\n\n\n                        <div className=\"buttons\">\n                            <button type=\"submit\" disabled={submitting}>\n                                Submit\n                            </button>\n                            <button\n                                type=\"button\"\n                                onClick={form.reset}\n                                disabled={submitting || pristine}\n                            >\n                                Reset\n                            </button>\n                        </div>\n                    </form>\n                )}\n            />\n        </>\n    )\n}\n\nexport default withAuthRedirect(Messages);\n\n"],"sourceRoot":""}