{"version":3,"sources":["components/Nav/Nav.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Footer/Footer.js","components/Nav/Nav.js","components/News/News.js","components/Music/Music.js","components/Settings/Settings.js","components/Shuffle/Block1.js","components/Shuffle/Block2.js","components/Shuffle/Block3.js","components/Shuffle/Block4.js","components/Shuffle/Shuffle.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","redux/profileReducer.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/img/wall.jpg","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","redux/authReducer.js","components/FormsControls/FormsControls.js","components/Login/LoginForm.js","redux/appReducer.js","components/Login/LoginLogoutBTN.js","components/Header/Header.js","App.js","serviceWorker.js","redux/sidebarReducer.jsx","redux/redux-store.js","index.js","util/validators.js","components/Shuffle/Shuffle.module.css","components/common/preloader/Preloader.js","components/Profile/MyPosts/MyPosts.module.css","components/FormsControls/FormControls.module.css","hoc/withAuthRedirect.js","redux/dialogsReducer.jsx","api/api.js","util/objectHelper.js","redux/usersReducer.jsx","components/Footer/Footer.module.css","components/Profile/MyPosts/Post/Post.module.css","components/common/preloader/Preloader.module.css"],"names":["module","exports","Footer","className","style","footer","Nav","nav","item","exact","to","activeClassName","activeName","News","Music","Settings","Block1","block1","Block2","block2","Block3","block3","Block4","block4","Shuffle","useState","blocks","setBlocks","shuffle","blockNumber","arr","temporary","permColor","shuffledArr","i","length","push","sort","Math","random","pop","onClick","Post","props","src","avatar","alt","text","like","MyPosts","React","memo","postsElements","postsData","map","post","key","wrap","onSubmit","val","addPostFunc","newPostBody","posts","AddPostForm","render","handleSubmit","component","name","placeholder","type","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","SAVE_PHOTO_SUCCESS","setUserStatus","statusText","initialState","profile","userStatus","getProfile","userId","dispatch","a","profileAPI","data","console","error","profileReducer","state","action","newPost","body","stateCopy","photos","MyPostsContainer","connect","profilePage","actionCreatorAddPost","ProfileStatus","getUpdateStatus","editMode","setEditMode","status","setStatus","authorizedUserId","useSelector","auth","selectedProfileUserId","useEffect","cursor","onDoubleClick","onBlur","autoFocus","value","onChange","e","target","ProfileDataForm","initialValues","validate","values","errors","fullName","lookingForAJobDescription","aboutMe","submitError","submitting","input","meta","touched","textError","Object","keys","contacts","toLowerCase","includes","fieldError","split","disabled","Contact","contactTitle","contactValue","ProfileData","goToEditMode","isOwner","lookingForAJob","ProfileInfo","savePhoto","saveProfile","res","wallpaper","backgroundImage","large","infoWrap","contentWrap","imgWrap","id","files","inputFile","htmlFor","Preloader","Profile","article","ProfileContainer","this","match","params","history","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","withAuthRedirect","withRouter","isAuth","getState","resultCode","FORM_ERROR","messages","file","updateStatus","SET_USER_DATA","SET_CAPTCHA_URL_SUCCESS","email","login","captchaUrl","setAuthUserData","payload","setCaptchaUrlSuccess","getAuth","authAPI","me","getCaptchaUrl","securityAPI","url","authReducer","Input","hasError","formControl","LoginForm","useDispatch","password","rememberMe","captcha","composeValidators","required","maxLengthCreator","minLength","color","INITIALIZED_SUCCESS","initialized","appReducer","LoginLogoutBTN","hide","setHide","loginInput","btn","onMouseOver","onMouseLeave","logout","Header","header","headerText","loginNL","UsersContainer","lazy","Messages","App","app","promise","Promise","all","path","fallback","Boolean","window","location","hostname","sidebarReducer","store","reducers","combineReducers","messagePage","dialogsReducer","sidebarPage","usersPage","usersReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","validators","reduce","validator","undefined","min","maxLength","preloaderWrap","mapStateToPropsWithRedirect","ADD_MESSAGE","addMessage","dialogsData","messagesData","m","newMessage","instance","Axios","create","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","follow","unfollow","delete","put","formData","FormData","append","updateObjInArr","items","itemId","objPropName","newObjProps","el","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","SET_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","isFollowingProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","setFollowingProgress","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","followed","filter"],"mappings":"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","file":"static/js/main.cf5deba9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3gICw\",\"item\":\"Nav_item__96rLj\",\"activeName\":\"Nav_activeName__28Ej8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__2LHtf\",\"wallpaper\":\"ProfileInfo_wallpaper__1teYi\",\"wrap\":\"ProfileInfo_wrap__28CmP\",\"contentWrap\":\"ProfileInfo_contentWrap__2xrQI\",\"imgWrap\":\"ProfileInfo_imgWrap__2Rzls\",\"inputFile\":\"ProfileInfo_inputFile__1x-DX\",\"contacts\":\"ProfileInfo_contacts__3y62P\",\"fieldError\":\"ProfileInfo_fieldError__1PnYz\",\"textError\":\"ProfileInfo_textError__1yN2m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"headerText\":\"Header_headerText__15hRh\",\"loginNL\":\"Header_loginNL__28skR\",\"loginInput\":\"Header_loginInput__3sKnk\",\"btn\":\"Header_btn__25p7W\",\"login\":\"Header_login__3V3Qa\",\"hide\":\"Header_hide__1H_PK\"};","import React from 'react';\nimport style from './Footer.module.css';\n\nconst Footer = () => {\n    return (\n        <footer className={style.footer}>footer</footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport style from './Nav.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst Nav = () => {\n    return (\n        <nav className={style.nav}>\n            <div className={style.item}>\n                <NavLink exact to='/profile' activeClassName={style.activeName}>\n                    Profile\n                </NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink exact to='/users' activeClassName={style.activeName}>\n                    Users\n                </NavLink>\n            </div>\n            <div  className={style.item}>\n                <NavLink to='/messages' activeClassName={style.activeName}>\n                    Messages\n                </NavLink>\n            </div>\n            <div  className={style.item}>\n                <NavLink to='/news' activeClassName={style.activeName}>\n                    News\n                </NavLink>\n            </div>\n            <div  className={style.item}>\n                <NavLink to='/music' activeClassName={style.activeName}>\n                    Music\n                </NavLink>\n            </div>\n            <div  className={style.item}>\n                <NavLink to='/settings' activeClassName={style.activeName}>\n                    Settings\n                </NavLink>\n            </div>\n            <div  className={style.item}>\n                <NavLink to='/shuffle' activeClassName={style.activeName}>\n                    Shuffle\n                </NavLink>\n            </div>\n        </nav>\n    )\n}\n\nexport default Nav;","import React from 'react';\n// import style from './Messages.module.css';\n\nconst News = () => {\n    return (\n        <>\n            News page\n        </>\n    )\n}\n\nexport default News;","import React from 'react';\n// import style from './Messages.module.css';\n\nconst Music = () => {\n    return (\n        <>\n            Music page\n        </>\n    )\n}\n\nexport default Music;","import React from 'react';\n// import style from './Messages.module.css';\n\nconst Settings = () => {\n    return (\n        <>\n            Settings page\n        </>\n    )\n}\n\nexport default Settings;","import React from 'react';\nimport style from './Shuffle.module.css';\n\nconst Block1 = () => {\n    return (\n        <div className={style.block1}> First </div>\n    )\n}\n\nexport default Block1;","import React from 'react';\nimport style from './Shuffle.module.css';\n\nconst Block2 = () => {\n    return (\n        <div className={style.block2}> Second </div>\n    )\n}\n\nexport default Block2;","import React from 'react';\nimport style from './Shuffle.module.css';\n\nconst Block3 = () => {\n    return (\n        <div className={style.block3}> Third </div>\n    )\n}\n\nexport default Block3;","import React from 'react';\nimport style from './Shuffle.module.css';\n\nconst Block4 = () => {\n    return (\n        <div className={style.block4}> Fourth </div>\n    )\n}\n\nexport default Block4;","import React, { useState } from 'react';\nimport Block1 from './Block1';\nimport Block2 from './Block2';\nimport Block3 from './Block3';\nimport Block4 from './Block4';\n\nconst Shuffle = () => {\n\n    const [blocks, setBlocks] = useState([\n        <Block1 />,\n        <Block2 />,\n        <Block3 />,\n        <Block4 />\n    ])\n    \n    const shuffle = (blockNumber) => {\n        \n        const arr = [...blocks]\n        const temporary = []\n        const permColor = []\n        const shuffledArr = []\n\n        for (let i = 0; i < arr.length; i++) {\n            if (i === blockNumber) {\n              permColor.push(arr[i])\n            }\n            if (i !== blockNumber) {\n              temporary.push(arr[i])\n            } \n        }\n\n        temporary.sort(() => Math.random() - 0.5)\n\n        for (let i = 0; i < arr.length; i++) {\n            if (i !== blockNumber) {\n              shuffledArr[i] = temporary.pop()\n            } \n            if (i === blockNumber) {\n              shuffledArr[i] = permColor[0]\n            }     \n        }\n\n        return setBlocks(shuffledArr)\n    }\n\n    const revert = () => {\n        return setBlocks([\n            <Block1 />,\n            <Block2 />,\n            <Block3 />,\n            <Block4 />\n        ])\n    }\n\n    return (\n        <>\n            <div onClick={ () => shuffle(0) }>\n                {blocks[0]}\n            </div>\n            <div onClick={ () => shuffle(1) }>\n                {blocks[1]}\n            </div>\n            <div onClick={ () => shuffle(2) }>\n                {blocks[2]}\n            </div>\n            <div onClick={ () => revert() }>\n                {blocks[3]}\n            </div>  \n        </>\n    )\n}\n\nexport default Shuffle;","import React from 'react';\nimport style from './Post.module.css';\n\nconst Post = (props) => {\n    \n    return (\n        <div className={style.item}>\n            <img src={props.avatar} alt=\"...\" />\n            {props.text}\n            <div>\n                <span>\n                    {`Like ${props.like}`} \n                </span> \n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import React from 'react';\nimport { Form, Field } from 'react-final-form'\nimport style from './MyPosts.module.css';\nimport Post from './Post/Post';\n\nconst MyPosts = React.memo(props => {\n\n    let postsElements = props.postsData\n        .map(post => <Post\n            key={post.text}\n            avatar={post.avatar}\n            text={post.text}\n            like={post.like}\n        />)\n\n    let addPost = (val) => {\n        props.addPostFunc(val.newPostBody);\n    }\n\n    return (\n        <div className={style.wrap}>\n            <h4> Feed </h4>\n            <AddPostForm\n                onSubmit={addPost}\n            />\n            <div className={style.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n})\n\nconst AddPostForm = (props) => {\n    return (\n        <Form\n            onSubmit={props.onSubmit}\n            render={({ handleSubmit }) => (\n                <form onSubmit={handleSubmit}>\n                    <div className=\"containerTextarea\">\n                        <Field\n                            component='textarea'\n                            name='newPostBody'\n                            placeholder='Please enter text' />\n                    </div>\n                    <button type='submit'>Add news</button>\n                </form>\n            )}\n        />\n    )\n}\n\nexport default MyPosts;","import { FORM_ERROR } from \"final-form\";\nimport { profileAPI } from \"../api/api\";\n\nconst ADD_POST = \"ADD_POST\";\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nconst SET_USER_STATUS = \"SET_USER_STATUS\";\nconst SAVE_PHOTO_SUCCESS = \"SAVE_PHOTO_SUCCESS\";\n\nexport const actionCreatorAddPost = (body) => {\n    return { type: ADD_POST, body }\n}\nconst setUserProfile = (profile) => {\n    return { type: SET_USER_PROFILE, profile }\n}\nconst setUserStatus = (statusText) => {\n    return { type: SET_USER_STATUS, statusText }\n}\nconst savePhotoSuccess = (photos) => {\n    return { type: SAVE_PHOTO_SUCCESS, photos }\n}\n\nconst initialState = {\n    postsData: [\n        {\n            avatar: `https://coubsecure-s.akamaihd.net/get/b81/p/coub/simple/cw_timeline_pic/691c3a60c6a/d02de237a879bceafbd0e/med_1542127707_image.jpg`,\n            text: `First post text`,\n            like: 13\n        },\n        {\n            avatar: `https://coubsecure-s.akamaihd.net/get/b81/p/coub/simple/cw_timeline_pic/691c3a60c6a/d02de237a879bceafbd0e/med_1542127707_image.jpg`,\n            text: `Second post text`,\n            like: 21\n        },\n        {\n            avatar: `https://coubsecure-s.akamaihd.net/get/b81/p/coub/simple/cw_timeline_pic/691c3a60c6a/d02de237a879bceafbd0e/med_1542127707_image.jpg`,\n            text: `Third post text`,\n            like: 8\n        },\n        {\n            avatar: `https://coubsecure-s.akamaihd.net/get/b81/p/coub/simple/cw_timeline_pic/691c3a60c6a/d02de237a879bceafbd0e/med_1542127707_image.jpg`,\n            text: `Fourth post text`,\n            like: 5\n        },\n        {\n            avatar: `https://coubsecure-s.akamaihd.net/get/b81/p/coub/simple/cw_timeline_pic/691c3a60c6a/d02de237a879bceafbd0e/med_1542127707_image.jpg`,\n            text: `Fifth post text`,\n            like: 21\n        }\n    ],\n    profile: null,\n    userStatus: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                avatar: `https://coubsecure-s.akamaihd.net/get/b81/p/coub/simple/cw_timeline_pic/691c3a60c6a/d02de237a879bceafbd0e/med_1542127707_image.jpg`,\n                text: action.body,\n                like: 0\n            }\n            let stateCopy = { ...state }\n            stateCopy.postsData = [...state.postsData]\n            stateCopy.postsData.push(newPost)\n            return stateCopy\n        }\n\n        case SET_USER_PROFILE: {\n            return { ...state, profile: action.profile }\n        }\n\n        case SET_USER_STATUS: {\n            return { ...state, userStatus: action.statusText }\n        }\n\n        case SAVE_PHOTO_SUCCESS: {\n            return { ...state, profile: { ...state.profile, photos: action.photos } }\n        }\n\n        default:\n            return state\n    }\n}\n\nexport const getProfile = (userId) => {\n    return async dispatch => {\n        try {\n            const data = await profileAPI.getProfile(userId)\n            dispatch(setUserProfile(data.data))\n        } catch (err) {\n            console.error(err)\n        }\n    }\n}\nexport const getStatus = (userId) => {\n    return async dispatch => {\n        try {\n            const res = await profileAPI.getStatus(userId)\n            dispatch(setUserStatus(res.data))\n        } catch (err) {\n            console.error(err)\n        }\n    }\n}\nexport const getUpdateStatus = (statusText) => {\n    return async dispatch => {\n        try {\n            const res = await profileAPI.updateStatus(statusText)\n            if (res.data.resultCode === 0) {\n                dispatch(setUserStatus(statusText))\n            }\n        }\n        catch (err) {\n            console.error(err)\n        }\n    }\n}\nexport const savePhoto = (file) => {\n    return async dispatch => {\n        try {\n            const res = await profileAPI.savePhoto(file)\n            if (res.data.resultCode === 0) {\n                dispatch(savePhotoSuccess(res.data.data.photos))\n            }\n        }\n        catch (err) {\n            console.error(err)\n        }\n    }\n}\nexport const saveProfile = (profile) => {\n    return async (dispatch, getState) => {\n        try {\n            const userId = getState().auth.userId\n            const res = await profileAPI.saveProfile(profile)\n            if (res.data.resultCode === 0) {\n                dispatch(getProfile(userId))\n                return null\n            }\n            else {\n                return { [FORM_ERROR]: res.data.messages[0] }\n            }\n        }\n        catch (err) {\n            console.error(err)\n        }\n    }\n}\n\nexport default profileReducer;","import MyPosts from './MyPosts';\nimport {\n    actionCreatorAddPost\n} from './../../../redux/profileReducer';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n    return {\n        postsData: state.profilePage.postsData\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPostFunc: (body) => {\n            dispatch(actionCreatorAddPost(body))\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","export default __webpack_public_path__ + \"static/media/wall.8f2fd9d3.jpg\";","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst ProfileStatus = (props) => {\n\n    const { userStatus, getUpdateStatus } = props\n\n    const [editMode, setEditMode] = useState(false)\n    const [status, setStatus] = useState(userStatus)\n\n    const authorizedUserId = useSelector(state => state.auth.userId)\n    const selectedProfileUserId = useSelector(state => state.profilePage.profile.userId)\n\n    const activateEditMode = () => {\n        if (authorizedUserId === selectedProfileUserId) setEditMode(true)\n    }\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        if (userStatus !== status) {\n            getUpdateStatus(status)\n        }\n    }\n    const onStatusChange = (text) => {\n        setStatus(text)\n    }\n\n    useEffect(() => {\n        setStatus(userStatus)\n    }, [userStatus])\n\n\n    return (\n        <>\n            {!editMode &&\n                <div>\n                    <span\n                        style={{ cursor: 'pointer' }}\n                        onDoubleClick={() => activateEditMode()}\n                    >\n                        {userStatus || \"enter status there\"}\n                    </span>\n                </div>}\n            {editMode &&\n                <div>\n                    <input\n                        onBlur={() => { deactivateEditMode() }}\n                        autoFocus={true}\n                        value={status}\n                        onChange={(e) => onStatusChange(e.target.value)}\n                    />\n                </div>}\n        </>\n    )\n\n}\n\nexport default ProfileStatus;","import React from 'react'\nimport { Form, Field } from 'react-final-form'\nimport style from './ProfileInfo.module.css'\n\nconst ProfileDataForm = ({ profile, onSubmit }) => {\n\n  return (\n    <div>\n      <Form\n        onSubmit={onSubmit}\n        initialValues={profile}\n        validate={values => {\n          const errors = {}\n          if (!values.fullName) {\n            errors.fullName = 'Required'\n          }\n          if (!values.lookingForAJobDescription) {\n            errors.lookingForAJobDescription = 'Please, write your skills'\n          }\n          if (!values.aboutMe) {\n            errors.aboutMe = 'Tell something about you'\n          }\n          return errors\n        }}\n        render={({\n          submitError,\n          handleSubmit,\n          submitting,\n        }) => (\n          <form onSubmit={handleSubmit}>\n\n            <Field name=\"fullName\">\n              {({ input, meta }) => (\n                <div>\n                  <label>Enter full name</label>\n                  <input {...input} type=\"text\" placeholder=\"John Smith\" />\n                  {(meta.error || meta.submitError) && meta.touched && (\n                    <span className={style.textError}>{meta.error || meta.submitError}</span>\n                  )}\n                </div>\n              )}\n            </Field>\n\n\n            <Field\n              name=\"lookingForAJob\"\n              type='checkbox'>\n              {({ input, meta }) => (\n                <div>\n                  <label>Is looking for a job</label>\n                  <input {...input} type=\"checkbox\" />\n                  {meta.error && meta.touched && <span className={style.textError}>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n\n            <Field name=\"lookingForAJobDescription\">\n              {({ input, meta }) => (\n                <div>\n                  <label>Job description</label>\n                  <input {...input} type=\"text\" placeholder=\"Skills\" />\n                  {meta.error && meta.touched && <span className={style.textError}>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n\n            <Field name=\"aboutMe\">\n              {({ input, meta }) => (\n                <div>\n                  <label>About me</label>\n                  <input {...input} type=\"text\" placeholder=\"Something interesting about you\" />\n                  {meta.error && meta.touched && <span className={style.textError}>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n\n            <div>\n              <b>Contacts</b>:\n                {Object.keys(profile.contacts).map(key => {\n                return <div key={key}>\n                  <Field name={`contacts.${key}`}>\n                    {({ input }) => (\n                      <div>\n                        <label><b>{key}:</b></label>\n                        <input {...input} type=\"text\" placeholder={`Your ${key} link`} className={submitError?.toLowerCase().includes(key) ? style.fieldError : ''} />\n                      </div>)}\n                  </Field>\n                </div>\n              })}\n            </div>\n\n            {submitError && <div className={style.textError}>{submitError.split('(')[0]}</div>}\n\n            <div>\n              <button type=\"submit\" disabled={submitting}> Save </button>\n            </div>\n          </form>\n        )}\n      />\n    </div>\n  )\n}\n\nexport default ProfileDataForm\n","import React, { useState } from 'react';\nimport style from './ProfileInfo.module.css';\nimport wallpaper from './../../img/wall.jpg'\nimport Preloader from '../../common/preloader/Preloader';\nimport ProfileStatus from './ProfileStatus';\nimport ProfileDataForm from './ProfileDataForm';\n\nconst ProfileInfo = (props) => {\n\n    const {\n        isOwner,\n        savePhoto,\n        saveProfile,\n        profile,\n        userStatus,\n        getUpdateStatus\n    } = props;\n\n    const [editMode, setEditMode] = useState(false)\n\n    const onSubmit = async data => {\n        const res = await saveProfile(data)\n        if (res) {\n            return res\n        }\n        setEditMode(false)\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0])\n        }\n    }\n\n    if (!profile) {\n        return (\n            <Preloader />\n        )\n    }\n    return (\n        <>\n            <div\n                className={style.wallpaper}\n                style={{\n                    backgroundImage: `url(${profile.photos.large || wallpaper})`\n                }}>\n                <div className={style.infoWrap}>\n                    <div className={style.wrap}>\n                        <div className={style.contentWrap}>\n                            <div className={style.imgWrap}>\n                                <img src={profile.photos.large || 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/7c/User_font_awesome.svg/1200px-User_font_awesome.svg.png'} alt=\"...\" />\n                                {isOwner && <div>\n                                    <input\n                                        type='file'\n                                        name='file'\n                                        id='file'\n                                        onChange={onMainPhotoSelected}\n                                        className={style.inputFile} />\n                                    <label htmlFor=\"file\"><div>Choose a photo</div></label>\n                                </div>}\n                            </div>\n                            <div>\n                                <ProfileStatus\n                                    userStatus={userStatus}\n                                    getUpdateStatus={getUpdateStatus}\n                                />\n                            </div>\n                            {editMode\n                                ? <ProfileDataForm profile={profile} onSubmit={onSubmit} />\n                                : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nconst Contact = ({ contactTitle, contactValue }) => {\n    return (\n        <div>\n            <b>{contactTitle}</b>: {contactValue}\n        </div>\n    )\n}\n\nconst ProfileData = ({ profile, goToEditMode, isOwner }) => {\n    return (\n        <div>\n            {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\n            <h3>{profile.fullName}</h3>\n            <div>\n                <b>About me</b>: {profile.aboutMe}\n            </div>\n            <div>\n                <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\n            </div>\n            <div>\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\n            </div>\n            <div>\n                <b>Contacts</b>:\n                <div className={style.contacts}>\n                    {Object.keys(profile.contacts).map(key => {\n                        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport style from './Profile.module.css';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\n\nconst Profile = (props) => {\n\n    return (\n        <article className={style.article}>\n            <ProfileInfo\n                isOwner={props.isOwner}\n                savePhoto={props.savePhoto}\n                saveProfile={props.saveProfile}\n                profile={props.profile}\n                userStatus={props.userStatus}\n                getUpdateStatus={props.getUpdateStatus}\n            />\n            <MyPostsContainer />\n        </article>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport { getProfile, getStatus, getUpdateStatus, savePhoto, saveProfile } from '../../redux/profileReducer'\nimport { withRouter } from 'react-router-dom';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId\n            if (!userId) {\n                this.props.history.push('/login')\n            }\n        }\n        this.props.getProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\n            this.refreshProfile()\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Profile\n                    {...this.props}\n                    profile={this.props.profile}\n                    isOwner={!this.props.match.params.userId}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        userStatus: state.profilePage.userStatus,\n        isAuth: state.auth.isAuth,\n        authorizedUserId: state.auth.userId\n    }\n}\n\nexport default compose(\n    withAuthRedirect,\n    withRouter,\n    connect(\n        mapStateToProps,\n        {\n            saveProfile,\n            savePhoto,\n            getProfile,\n            getStatus,\n            getUpdateStatus\n        }\n    )\n)(ProfileContainer);","import { FORM_ERROR } from \"final-form\";\nimport { authAPI, securityAPI } from \"../api/api\"\n\nconst SET_USER_DATA = \"SET_USER_DATA\";\nconst SET_CAPTCHA_URL_SUCCESS = \"SET_CAPTCHA_URL_SUCCESS\"\n\nconst initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    captchaUrl: null\n}\n\nconst authReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case SET_USER_DATA:\n        case SET_CAPTCHA_URL_SUCCESS:\n            return {\n                ...state,\n                ...action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport const setAuthUserData = (userId, email, login, isAuth) => {\n    return { type: SET_USER_DATA, payload: { userId, email, login, isAuth } }\n}\n\nexport const setCaptchaUrlSuccess = (captchaUrl) => {\n    return { type: SET_CAPTCHA_URL_SUCCESS, payload: { captchaUrl } }\n}\n\nexport const getAuth = () => {\n    return async (dispatch) => {\n        try {\n            const res = await authAPI.me();\n            if (res.data.resultCode === 0) {\n                let { id, email, login } = res.data.data;\n                dispatch(setAuthUserData(id, email, login, true));\n            }\n        } catch (err) {\n            return console.error(err);\n        }\n    }\n}\n\nexport const getLogin = (email, password, rememberMe, captcha) => {\n    return async dispatch => {\n        try {\n            const res = await authAPI.login(email, password, rememberMe, captcha)\n            if (res.data.resultCode === 0) {\n                dispatch(getAuth())\n                return null\n            } else {\n                if (res.data.resultCode === 10) {\n                    dispatch(getCaptchaUrl())\n                }\n                return { [FORM_ERROR]: res.data.messages.length > 0 ? res.data.messages[0] : 'error' }\n            }\n        } catch (err) {\n            console.error(err)\n        }\n    }\n}\nexport const getCaptchaUrl = () => {\n    return async dispatch => {\n        try {\n            const res = await securityAPI.getCaptchaUrl()\n            const captchaUrl = res.data.url\n            dispatch(setCaptchaUrlSuccess(captchaUrl))\n        } catch (err) {\n            console.error(err)\n        }\n    }\n}\nexport const getLogout = () => {\n    return async dispatch => {\n        try {\n            const res = await authAPI.logout()\n            if (res.data.resultCode === 0) {\n                dispatch(setAuthUserData(null, null, null, false))\n            }\n        } catch (err) {\n            console.error(err)\n        }\n    }\n}\n\nexport default authReducer;","import React from 'react';\nimport style from './FormControls.module.css'\n\nexport const Input = ({ meta, input, ...props }) => {\n\n    const hasError = meta.touched && meta.error\n\n    return (\n        <div className={`${style.formControl} ${hasError && style.error}`}>\n            <div>\n                <input {...input} {...props} />\n            </div>\n            { hasError && <span>{meta.error}</span>}\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getLogin } from '../../redux/authReducer';\nimport { Form, Field } from 'react-final-form'\nimport { composeValidators, required, maxLengthCreator, minLength } from '../../util/validators';\nimport { Input } from '../FormsControls/FormsControls';\nimport { Redirect } from 'react-router-dom';\n\n\nconst LoginForm = () => {\n\n    const dispatch = useDispatch()\n    const isAuth = useSelector(state => state.auth.isAuth)\n    const captchaUrl = useSelector(state => state.auth.captchaUrl)\n\n    const onSubmit = data => {\n        const res = dispatch(getLogin(data.email, data.password, data.rememberMe, data.captcha))\n        if (res) {\n            return res\n        }\n    }\n\n    if (isAuth) return <Redirect to='/profile' />\n\n    return (\n        <>\n            <h1>Login</h1>\n            <Form\n                onSubmit={onSubmit}\n                render={({\n                    handleSubmit,\n                    submitError,\n                    submitting\n                }) => (\n                    <form onSubmit={handleSubmit}>\n\n                        <Field\n                            name='email'\n                            component={Input}\n                            validate={composeValidators(required, maxLengthCreator(20))}\n                            placeholder='email'\n                            type='email'\n                        />\n\n                        <Field\n                            name='password'\n                            component={Input}\n                            validate={composeValidators(required, maxLengthCreator(20), minLength(8))}\n                            placeholder='password'\n                            type='password'\n                        />\n\n                        <Field\n                            type={'checkbox'}\n                            name={'rememberMe'}\n                            component={'input'}\n                        /> Remember me\n\n                        {submitError && <div style={{ color: 'red' }}>{submitError}</div>}\n                        {captchaUrl && <img src={captchaUrl} alt='...' />}\n                        {captchaUrl && <Field\n                            name='captcha'\n                            component={Input}\n                            validate={required}\n                            placeholder='Captcha symbols'\n                            type='text'\n                        />}\n                        <div>\n                            <button type=\"submit\" disabled={submitting}>\n                                Submit\n                            </button>\n                        </div>\n                    </form>\n                )}\n            />\n        </>\n    )\n}\n\nexport default LoginForm;","import { getAuth } from \"./authReducer\";\n\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\n\nconst initialState = {\n    initialized: false\n}\n\nconst appReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n\n        default:\n            return state\n    }\n}\n\nconst setInitializedSuccess = () => {\n    return { type: INITIALIZED_SUCCESS }\n}\n\nexport const getInitializeApp = () => {\n    return async dispatch => {\n        try {\n            let promise = dispatch(getAuth())\n            await Promise.all([promise])\n            dispatch(setInitializedSuccess())\n        } catch (err) {\n            console.error(err)\n        }\n    }\n}\n\nexport default appReducer;","import React, { useState } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { NavLink } from \"react-router-dom\"\nimport { getLogout } from \"../../redux/authReducer\"\nimport style from '../Header/Header.module.css'\n\nconst LoginLogoutBTN = () => {\n\n    const dispatch = useDispatch()\n    const isAuth = useSelector(state => state.auth.isAuth)\n    const login = useSelector(state => state.auth.login)\n    const [hide, setHide] = useState(false)\n\n    return (\n        <div className={style.loginInput}>\n            {isAuth\n                ? <div className={style.btn}\n                    onMouseOver={() => setHide(true)}\n                    onMouseLeave={() => setHide(false)} >\n                    <div className={hide ? style.hide : null}>{login}</div>\n                    <div className={!hide ? style.hide : null} onClick={() => dispatch(getLogout())}>Logout</div>\n                </div>\n                : <NavLink to='/login'><div className={style.btn + ' ' + style.login}>Login</div> </NavLink>}\n        </div>\n    )\n}\n\nexport default LoginLogoutBTN;","import React from 'react';\nimport style from './Header.module.css';\nimport LoginLogoutBTN from '../Login/LoginLogoutBTN';\n\nconst Header = () => {\n\n    return (\n        <div className={style.header}>\n            <div className={style.headerText}>The orbit</div>\n            <div className={style.loginNL}>\n                <LoginLogoutBTN />\n            </div>\n        </div>\n    )\n}\n\nexport default Header;\n","import React, { lazy, useEffect, Suspense } from 'react';\nimport './components/css/App.css';\nimport Footer from './components/Footer/Footer';\nimport Nav from './components/Nav/Nav';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport Shuffle from './components/Shuffle/Shuffle';\nimport {\n  HashRouter,\n  Route\n} from 'react-router-dom'\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport LoginForm from './components/Login/LoginForm';\nimport { getInitializeApp } from './redux/appReducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Preloader from './components/common/preloader/Preloader';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport Header from './components/Header/Header';\n\nconst UsersContainer = lazy(() => import('./components/Users/UsersContainer'))\nconst Messages = lazy(() => import('./components/Messages/Messages'))\n\nconst App = () => {\n\n  const initialized = useSelector(state => state.app.initialized)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getInitializeApp())\n  }, [dispatch])\n\n  if (!initialized) {\n    return <Preloader />\n  }\n  return (\n    <div>\n      <div className=\"grid\">\n        <HashRouter>\n          <Header />\n          <Nav />\n          <div className='content'>\n            <Route path='/profile/:userId?' component={ProfileContainer} />\n            <Route\n              path='/messages'\n              render={() => {\n                return <Suspense fallback={<div> Loading... </div>}>\n                  <Messages />\n                </Suspense>\n              }} />\n            <Route\n              path='/users'\n              render={() => {\n                return <Suspense fallback={<div> Loading... </div>}>\n                  <UsersContainer />\n                </Suspense>\n              }} />\n            <Route path='/news' component={News} />\n            <Route path='/music' component={Music} />\n            <Route path='/settings' component={Settings} />\n            <Route path='/shuffle' component={Shuffle} />\n            <Route path='/login' component={LoginForm} />\n          </div>\n          <Footer />\n        </HashRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {}\n\nconst sidebarReducer = (store = initialState, action) => {\n\n    return store;\n}\n\nexport default sidebarReducer;","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport profileReducer from './profileReducer';\nimport dialogsReducer from './dialogsReducer';\nimport sidebarReducer from './sidebarReducer';\nimport usersReducer from './usersReducer';\nimport authReducer from './authReducer';\nimport { reducer as formReducer } from 'redux-form';\nimport appReducer from './appReducer';\n\nconst reducers = combineReducers({\n    profilePage: profileReducer,\n    messagePage: dialogsReducer,\n    sidebarPage: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    app: appReducer,\n    form: formReducer\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\n\nwindow.__store__ = store;\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './components/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const composeValidators = (...validators) => value =>\n    validators.reduce((error, validator) => error || validator(value), undefined)\n\n\n// export const required = value => (value ? undefined : 'Field must by filled')\n\nexport const mustBeNumber = value => (isNaN(value) ? 'Must be a number' : undefined)\n\nexport const minValue = min => value =>\n    isNaN(value) || value >= min ? undefined : `Should be greater than ${min}`\n    \nexport const minLength = min => value =>\n    value.length >= min ? undefined : `Should be longer than ${min} symbols`\n    \nexport const required = (value) => {\n    if (value) return undefined\n    return `Field must by filled`\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `max length is ${maxLength} symbols`\n    return undefined\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block1\":\"Shuffle_block1__1oK62\",\"block2\":\"Shuffle_block2__12wYk\",\"block3\":\"Shuffle_block3__1wbVM\",\"block4\":\"Shuffle_block4__3rcjM\"};","import React from 'react';\nimport style from './Preloader.module.css';\n// import loading from '../../../assets/images/loading.gif';\n\nconst Preloader = () => {\n    return (\n        <div className={style.preloaderWrap}>\n            {/* <img src={loading} alt='...' /> */}\n            <h1>Preloader</h1>\n        </div>\n    )\n}\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"MyPosts_wrap__WP9pz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControls_error__2zpah\",\"formSumError\":\"FormControls_formSumError__22XPT\"};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nconst mapStateToPropsWithRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n\n    const RedirectComponent = (props) => {\n        if (!props.isAuth) return <Redirect to={'/login'} />\n        return <Component {...props} />\n    }\n    const ConnectedAuthRedirectComponent = connect(mapStateToPropsWithRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n}\n\n","const ADD_MESSAGE = \"ADD_MESSAGE\";\n\nexport const addMessage = (body) => {\n    return { type: ADD_MESSAGE, body }\n}\n\nconst initialState = {\n    dialogsData: [\n        { id: 1, name: \"Bogdan\" },\n        { id: 2, name: \"Vera\" },\n        { id: 3, name: \"Nadezhda\" },\n        { id: 4, name: \"Lyubov\" }\n    ],\n    messagesData: [\n        { m: \"First message to Dev\" },\n        { m: \"Second random message\" },\n        { m: \"Third crazy message\" }\n    ]\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case ADD_MESSAGE: {\n            let newMessage = {\n                m: action.body\n            }\n            let stateCopy = { ...state }\n            stateCopy.messagesData = [...state.messagesData]\n            stateCopy.messagesData.push(newMessage)\n            return stateCopy\n        }\n\n        default:\n            return state\n    }\n}\n\nexport default dialogsReducer;","import Axios from \"axios\"\n\nconst instance = Axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    withCredentials: true,\n    headers: {\n        'API-KEY': '578a5f36-0f95-4a91-a1d4-86904b25ee94'\n    }\n});\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 5) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n}\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/${userId}`)\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId)\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, { status: status })\n    },\n    savePhoto(file) {\n        const formData = new FormData()\n        formData.append('image', file)\n\n        return instance.put(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n    },\n    saveProfile(profile) {\n        return instance.put(`profile`, profile)\n    }\n}\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`)\n    },\n    login(email, password, rememberMe = false, captcha = null) {\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha })\n    },\n    logout() {\n        return instance.delete(`auth/login`)\n    }\n}\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`security/get-captcha-url`)\n    }\n}\n","export const updateObjInArr = (items, itemId, objPropName, newObjProps) => {\n    return items.map(el => {\n        if (el[objPropName] === itemId) {\n            return { ...el, ...newObjProps }\n        }\n        return el\n    })\n}","import { usersAPI } from \"../api/api\";\nimport { updateObjInArr } from \"../util/objectHelper\";\n\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nconst SET_FOLLOWING_PROGRESS = \"SET_FOLLOWING_PROGRESS\";\n\nconst initialState = {\n    users: [],\n    pageSize: 9,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    isFollowingProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case FOLLOW:\n            return { ...state, users: updateObjInArr(state.users, action.userId, 'id', { followed: true }) }\n\n        case UNFOLLOW:\n            return { ...state, users: updateObjInArr(state.users, action.userId, 'id', { followed: false }) }\n\n        case SET_USERS:\n            return { ...state, users: action.users }\n\n        case SET_CURRENT_PAGE:\n            return { ...state, currentPage: action.currentPage }\n\n        case SET_TOTAL_USERS_COUNT:\n            return { ...state, totalUsersCount: action.totalUsersCount }\n\n        case TOGGLE_IS_FETCHING:\n            return { ...state, isFetching: action.isFetching }\n\n        case SET_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                isFollowingProgress: action.isFetching\n                    ? [...state.isFollowingProgress, action.userId]\n                    : state.isFollowingProgress.filter(id => id !== action.userId)\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const followSuccess = (userId) => {\n    return { type: FOLLOW, userId }\n}\nexport const unfollowSuccess = (userId) => {\n    return { type: UNFOLLOW, userId }\n}\nexport const setUsers = (users) => {\n    return { type: SET_USERS, users }\n}\nexport const setCurrentPage = (currentPage) => {\n    return { type: SET_CURRENT_PAGE, currentPage }\n}\nexport const setTotalUsersCount = (totalUsersCount) => {\n    return { type: SET_TOTAL_USERS_COUNT, totalUsersCount }\n}\nexport const toggleIsFetching = (isFetching) => {\n    return { type: TOGGLE_IS_FETCHING, isFetching }\n}\nexport const setFollowingProgress = (isFetching, userId) => {\n    return { type: SET_FOLLOWING_PROGRESS, isFetching, userId }\n}\n\nexport const getUsers = (currentPage, pageSize) => {\n    return async dispatch => {\n        dispatch(toggleIsFetching(true))\n        dispatch(setCurrentPage(currentPage))\n        try {\n            const data = await usersAPI.getUsers(currentPage, pageSize)\n            dispatch(setUsers(data.data.items))\n            dispatch(setTotalUsersCount(data.data.totalCount))\n            dispatch(toggleIsFetching(false))\n        } catch (err) {\n            console.error(err)\n            dispatch(toggleIsFetching(false))\n        }\n    }\n}\n\nconst followUnfollowFlow = async (userId, dispatch, apiMethod, actionCreator) => {\n    dispatch(setFollowingProgress(true, userId))\n    try {\n        const res = await apiMethod(userId)\n        if (res.data.resultCode === 0) {\n            dispatch(actionCreator(userId))\n        }\n        dispatch(setFollowingProgress(false, userId))\n    } catch (err) {\n        console.error(err)\n        dispatch(setFollowingProgress(false, userId))\n    }\n}\n\nexport const unfollow = userId => {\n    return async dispatch => {\n        followUnfollowFlow(userId, dispatch, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\n    }\n}\nexport const follow = userId => {\n    return async dispatch => {\n        followUnfollowFlow(userId, dispatch, usersAPI.follow.bind(usersAPI), followSuccess)\n    }\n}\n\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1w0lV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderWrap\":\"Preloader_preloaderWrap__2ytu8\"};"],"sourceRoot":""}