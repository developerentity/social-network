{"version":3,"sources":["components/Nav/Nav.module.css","components/Header/Header.module.css","components/Footer/Footer.js","components/Nav/Nav.js","components/News/News.js","components/Music/Music.js","components/Settings/Settings.js","components/Shuffle/Block1.js","components/Shuffle/Block2.js","components/Shuffle/Block3.js","components/Shuffle/Block4.js","components/Shuffle/Shuffle.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","redux/profileReducer.js","components/Profile/MyPosts/MyPostsContainer.js","components/img/wall.jpg","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","redux/authReducer.js","components/FormsControls/FormsControls.js","components/Login/LoginForm.js","redux/appReducer.js","components/Login/LoginLogoutBTN.js","components/Header/Header.js","App.js","serviceWorker.js","redux/sidebarReducer.js","redux/redux-store.js","index.js","util/validators.js","components/Shuffle/Shuffle.module.css","components/common/preloader/Preloader.js","components/Profile/MyPosts/MyPosts.module.css","components/FormsControls/FormControls.module.css","hoc/withAuthRedirect.js","redux/dialogsReducer.js","api/api.js","util/objectHelper.js","redux/usersReducer.js","components/Footer/Footer.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/common/preloader/Preloader.module.css"],"names":["module","exports","Footer","className","style","footer","Nav","nav","item","exact","to","activeClassName","activeName","News","Music","Settings","Block1","block1","Block2","block2","Block3","block3","Block4","block4","Shuffle","useState","blocks","setBlocks","shuffle","blockNumber","arr","temporary","permColor","shuffledArr","i","length","push","sort","Math","random","pop","onClick","Post","props","src","avatar","alt","text","like","MyPosts","React","memo","postsElements","postsData","map","post","key","sleep","ms","Promise","resolve","setTimeout","addPost","val","a","addPostFunc","newPostBody","wrap","onSubmit","posts","AddPostForm","initialValues","employed","render","handleSubmit","submitting","pristine","form","event","then","reset","component","name","placeholder","type","disabled","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","SAVE_PHOTO_SUCCESS","setUserStatus","statusText","initialState","profile","userStatus","getProfile","userId","dispatch","profileAPI","data","console","error","profileReducer","state","action","newPost","body","stateCopy","photos","MyPostsContainer","connect","profilePage","actionCreatorAddPost","ProfileStatus","getUpdateStatus","editMode","setEditMode","status","setStatus","isMyProfile","useSelector","auth","useEffect","profileStatus","onDoubleClick","onBlur","autoFocus","value","onChange","e","target","ProfileDataForm","formWrap","validate","values","errors","fullName","lookingForAJobDescription","aboutMe","submitError","input","meta","touched","textError","id","htmlFor","Object","keys","contacts","toLowerCase","includes","split","Contact","contactTitle","contactValue","ProfileData","goToEditMode","isOwner","lookingForAJob","ProfileInfo","savePhoto","saveProfile","res","wallpaper","backgroundImage","large","infoWrap","contentWrap","imgWrap","files","inputFile","Preloader","Profile","article","ProfileContainer","this","match","params","authorizedUserId","history","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","withAuthRedirect","withRouter","isAuth","getState","resultCode","FORM_ERROR","messages","file","updateStatus","SET_USER_DATA","SET_CAPTCHA_URL_SUCCESS","email","login","captchaUrl","setAuthUserData","payload","setCaptchaUrlSuccess","getAuth","authAPI","me","getCaptchaUrl","securityAPI","url","authReducer","Input","hasError","formControl","LoginForm","useDispatch","password","rememberMe","captcha","composeValidators","required","maxLengthCreator","minLength","color","INITIALIZED_SUCCESS","initialized","appReducer","LoginLogoutBTN","hide","setHide","loginInput","btn","onMouseOver","onMouseLeave","logout","Header","header","headerText","loginNL","UsersContainer","lazy","Messages","App","app","promise","all","path","fallback","Boolean","window","location","hostname","sidebarReducer","store","reducers","combineReducers","messagePage","dialogsReducer","sidebarPage","usersPage","usersReducer","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","validators","reduce","validator","undefined","min","maxLength","preloaderWrap","mapStateToPropsWithRedirect","ADD_MESSAGE","addMessage","dialogsData","messagesData","m","newMessage","instance","Axios","create","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","follow","unfollow","delete","put","formData","FormData","append","updateObjInArr","items","itemId","objPropName","newObjProps","el","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","SET_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","isFollowingProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","setFollowingProgress","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","followed","filter"],"mappings":"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","file":"static/js/main.7f8d7335.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3gICw\",\"item\":\"Nav_item__96rLj\",\"activeName\":\"Nav_activeName__28Ej8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"headerText\":\"Header_headerText__15hRh\",\"loginNL\":\"Header_loginNL__28skR\",\"loginInput\":\"Header_loginInput__3sKnk\",\"btn\":\"Header_btn__25p7W\",\"login\":\"Header_login__3V3Qa\",\"hide\":\"Header_hide__1H_PK\"};","import React from 'react';\nimport style from './Footer.module.css';\n\nconst Footer = () => {\n    return (\n        <footer className={style.footer}>footer</footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport style from './Nav.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst Nav = () => {\n    return (\n        <nav className={style.nav}>\n            <div className={style.item}>\n                <NavLink exact to='/profile' activeClassName={style.activeName}>\n                    Profile\n                </NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink exact to='/users' activeClassName={style.activeName}>\n                    Users\n                </NavLink>\n            </div>\n            <div  className={style.item}>\n                <NavLink to='/messages' activeClassName={style.activeName}>\n                    Messages\n                </NavLink>\n            </div>\n            <div  className={style.item}>\n                <NavLink to='/news' activeClassName={style.activeName}>\n                    News\n                </NavLink>\n            </div>\n            <div  className={style.item}>\n                <NavLink to='/music' activeClassName={style.activeName}>\n                    Music\n                </NavLink>\n            </div>\n            <div  className={style.item}>\n                <NavLink to='/settings' activeClassName={style.activeName}>\n                    Settings\n                </NavLink>\n            </div>\n            <div  className={style.item}>\n                <NavLink to='/shuffle' activeClassName={style.activeName}>\n                    Shuffle\n                </NavLink>\n            </div>\n        </nav>\n    )\n}\n\nexport default Nav;","import React from 'react';\n// import style from './Messages.module.css';\n\nconst News = () => {\n    return (\n        <>\n            News page\n        </>\n    )\n}\n\nexport default News;","import React from 'react';\n// import style from './Messages.module.css';\n\nconst Music = () => {\n    return (\n        <>\n            Music page\n        </>\n    )\n}\n\nexport default Music;","import React from 'react';\n// import style from './Messages.module.css';\n\nconst Settings = () => {\n    return (\n        <>\n            Settings page\n        </>\n    )\n}\n\nexport default Settings;","import React from 'react';\nimport style from './Shuffle.module.css';\n\nconst Block1 = () => {\n    return (\n        <div className={style.block1}> First </div>\n    )\n}\n\nexport default Block1;","import React from 'react';\nimport style from './Shuffle.module.css';\n\nconst Block2 = () => {\n    return (\n        <div className={style.block2}> Second </div>\n    )\n}\n\nexport default Block2;","import React from 'react';\nimport style from './Shuffle.module.css';\n\nconst Block3 = () => {\n    return (\n        <div className={style.block3}> Third </div>\n    )\n}\n\nexport default Block3;","import React from 'react';\nimport style from './Shuffle.module.css';\n\nconst Block4 = () => {\n    return (\n        <div className={style.block4}> Fourth </div>\n    )\n}\n\nexport default Block4;","import React, { useState } from 'react';\nimport Block1 from './Block1';\nimport Block2 from './Block2';\nimport Block3 from './Block3';\nimport Block4 from './Block4';\n\nconst Shuffle = () => {\n\n    const [blocks, setBlocks] = useState([\n        <Block1 />,\n        <Block2 />,\n        <Block3 />,\n        <Block4 />\n    ])\n    \n    const shuffle = (blockNumber) => {\n        \n        const arr = [...blocks]\n        const temporary = []\n        const permColor = []\n        const shuffledArr = []\n\n        for (let i = 0; i < arr.length; i++) {\n            if (i === blockNumber) {\n              permColor.push(arr[i])\n            }\n            if (i !== blockNumber) {\n              temporary.push(arr[i])\n            } \n        }\n\n        temporary.sort(() => Math.random() - 0.5)\n\n        for (let i = 0; i < arr.length; i++) {\n            if (i !== blockNumber) {\n              shuffledArr[i] = temporary.pop()\n            } \n            if (i === blockNumber) {\n              shuffledArr[i] = permColor[0]\n            }     \n        }\n\n        return setBlocks(shuffledArr)\n    }\n\n    const revert = () => {\n        return setBlocks([\n            <Block1 />,\n            <Block2 />,\n            <Block3 />,\n            <Block4 />\n        ])\n    }\n\n    return (\n        <>\n            <div onClick={ () => shuffle(0) }>\n                {blocks[0]}\n            </div>\n            <div onClick={ () => shuffle(1) }>\n                {blocks[1]}\n            </div>\n            <div onClick={ () => shuffle(2) }>\n                {blocks[2]}\n            </div>\n            <div onClick={ () => revert() }>\n                {blocks[3]}\n            </div>  \n        </>\n    )\n}\n\nexport default Shuffle;","import React from 'react';\nimport style from './Post.module.css';\n\nconst Post = (props) => {\n    \n    return (\n        <div className={style.item}>\n            <img src={props.avatar} alt=\"...\" />\n            {props.text}\n            <div>\n                <span>\n                    {`Like ${props.like}`} \n                </span> \n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import React from 'react';\nimport { Form, Field } from 'react-final-form'\nimport style from './MyPosts.module.css';\nimport Post from './Post/Post';\n\nconst MyPosts = React.memo(props => {\n\n    const postsElements = props.postsData\n        .map(post => <Post\n            key={post.text}\n            avatar={post.avatar}\n            text={post.text}\n            like={post.like}\n        />)\n\n    const sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\n    const addPost = async val => {\n        await sleep(200)\n        props.addPostFunc(val.newPostBody);\n    }\n\n    return (\n        <div className={style.wrap}>\n            <h4> Feed </h4>\n            <AddPostForm\n                onSubmit={addPost}\n            />\n            <div className={style.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n})\n\nconst AddPostForm = (props) => {\n    return (\n        <Form\n            onSubmit={props.onSubmit}\n            initialValues={{ employed: true }}\n            render={({ handleSubmit, submitting, pristine, form }) => (\n                <form\n                    onSubmit={event => {\n                        handleSubmit(event).then(() => form.reset())\n                    }}>\n                    <div className=\"containerTextarea\">\n                        <Field\n                            component='textarea'\n                            name='newPostBody'\n                            placeholder='Please enter text' />\n                    </div>\n                    <button type=\"submit\" disabled={submitting || pristine}> Add post </button>\n                </form>\n            )}\n        />\n    )\n}\n\nexport default MyPosts;","import { FORM_ERROR } from \"final-form\";\nimport { profileAPI } from \"../api/api\";\n\nconst ADD_POST = \"ADD_POST\";\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nconst SET_USER_STATUS = \"SET_USER_STATUS\";\nconst SAVE_PHOTO_SUCCESS = \"SAVE_PHOTO_SUCCESS\";\n\nexport const actionCreatorAddPost = (body) => {\n    return { type: ADD_POST, body }\n}\nconst setUserProfile = (profile) => {\n    return { type: SET_USER_PROFILE, profile }\n}\nconst setUserStatus = (statusText) => {\n    return { type: SET_USER_STATUS, statusText }\n}\nconst savePhotoSuccess = (photos) => {\n    return { type: SAVE_PHOTO_SUCCESS, photos }\n}\n\nconst initialState = {\n    postsData: [\n        {\n            avatar: `https://cdn.shazoo.ru/484375_17F3XlRozj_484361_hyk7rvse2u_bf3cdf05_838c.jpg`,\n            text: `First post text`,\n            like: 13\n        },\n        {\n            avatar: `https://cdn.shazoo.ru/484375_17F3XlRozj_484361_hyk7rvse2u_bf3cdf05_838c.jpg`,\n            text: `Second post text`,\n            like: 21\n        },\n        {\n            avatar: `https://cdn.shazoo.ru/484375_17F3XlRozj_484361_hyk7rvse2u_bf3cdf05_838c.jpg`,\n            text: `Third post text`,\n            like: 8\n        },\n        {\n            avatar: `https://cdn.shazoo.ru/484375_17F3XlRozj_484361_hyk7rvse2u_bf3cdf05_838c.jpg`,\n            text: `Fourth post text`,\n            like: 5\n        },\n        {\n            avatar: `https://cdn.shazoo.ru/484375_17F3XlRozj_484361_hyk7rvse2u_bf3cdf05_838c.jpg`,\n            text: `Fifth post text`,\n            like: 21\n        }\n    ],\n    profile: null,\n    userStatus: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                avatar: `https://cdn.shazoo.ru/484375_17F3XlRozj_484361_hyk7rvse2u_bf3cdf05_838c.jpg`,\n                text: action.body,\n                like: 0\n            }\n            let stateCopy = { ...state }\n            stateCopy.postsData = [...state.postsData]\n            stateCopy.postsData.push(newPost)\n            return stateCopy\n        }\n\n        case SET_USER_PROFILE: {\n            return { ...state, profile: action.profile }\n        }\n\n        case SET_USER_STATUS: {\n            return { ...state, userStatus: action.statusText }\n        }\n\n        case SAVE_PHOTO_SUCCESS: {\n            return { ...state, profile: { ...state.profile, photos: action.photos } }\n        }\n\n        default:\n            return state\n    }\n}\n\nexport const getProfile = (userId) => {\n    return async dispatch => {\n        try {\n            const data = await profileAPI.getProfile(userId)\n            dispatch(setUserProfile(data.data))\n        } catch (err) {\n            console.error(err)\n        }\n    }\n}\nexport const getStatus = (userId) => {\n    return async dispatch => {\n        try {\n            const res = await profileAPI.getStatus(userId)\n            dispatch(setUserStatus(res.data))\n        } catch (err) {\n            console.error(err)\n        }\n    }\n}\nexport const getUpdateStatus = (statusText) => {\n    return async dispatch => {\n        try {\n            const res = await profileAPI.updateStatus(statusText)\n            if (res.data.resultCode === 0) {\n                dispatch(setUserStatus(statusText))\n            }\n        }\n        catch (err) {\n            console.error(err)\n        }\n    }\n}\nexport const savePhoto = (file) => {\n    return async dispatch => {\n        try {\n            const res = await profileAPI.savePhoto(file)\n            if (res.data.resultCode === 0) {\n                dispatch(savePhotoSuccess(res.data.data.photos))\n            }\n        }\n        catch (err) {\n            console.error(err)\n        }\n    }\n}\nexport const saveProfile = (profile) => {\n    return async (dispatch, getState) => {\n        try {\n            const userId = getState().auth.userId\n            const res = await profileAPI.saveProfile(profile)\n            if (res.data.resultCode === 0) {\n                dispatch(getProfile(userId))\n                return null\n            }\n            else {\n                return { [FORM_ERROR]: res.data.messages[0] }\n            }\n        }\n        catch (err) {\n            console.error(err)\n        }\n    }\n}\n\nexport default profileReducer;","import MyPosts from './MyPosts';\nimport {\n    actionCreatorAddPost\n} from '../../../redux/profileReducer';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n    return {\n        postsData: state.profilePage.postsData\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPostFunc: (body) => {\n            dispatch(actionCreatorAddPost(body))\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","export default __webpack_public_path__ + \"static/media/wall.8f2fd9d3.jpg\";","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport style from './ProfileInfo.module.css';\n\nconst ProfileStatus = (props) => {\n\n    const { userStatus, getUpdateStatus } = props\n\n    const [editMode, setEditMode] = useState(false)\n    const [status, setStatus] = useState(userStatus)\n\n    const authorizedUserId = useSelector(state => state.auth.userId)\n    const selectedProfileUserId = useSelector(state => state.profilePage.profile.userId)\n\n    const isMyProfile = authorizedUserId === selectedProfileUserId\n\n    const activateEditMode = () => {\n        isMyProfile && setEditMode(true)\n    }\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        if (userStatus !== status) {\n            getUpdateStatus(status)\n        }\n    }\n    const onStatusChange = (text) => {\n        setStatus(text)\n    }\n\n    useEffect(() => {\n        setStatus(userStatus)\n    }, [userStatus])\n\n\n    return (\n        <>\n            {!editMode &&\n                <div className={isMyProfile ? style.profileStatus : ''}>\n                    <span onDoubleClick={() => activateEditMode()}>\n                        {userStatus || (isMyProfile ? \"enter status there\" : null)}\n                    </span>\n                </div>}\n            {editMode &&\n                <div>\n                    <input\n                        className='form-control mt-2'\n                        onBlur={() => { deactivateEditMode() }}\n                        autoFocus={true}\n                        value={status}\n                        onChange={(e) => onStatusChange(e.target.value)}\n                    />\n                </div>}\n        </>\n    )\n\n}\n\nexport default ProfileStatus;","import React from 'react'\nimport { Form, Field } from 'react-final-form'\nimport style from './ProfileInfo.module.css'\n\nconst ProfileDataForm = ({ profile, onSubmit }) => {\n\n  return (\n    <div className={style.formWrap}>\n      <Form\n        onSubmit={onSubmit}\n        initialValues={profile}\n        validate={values => {\n          const errors = {}\n          if (!values.fullName) {\n            errors.fullName = 'Required'\n          }\n          if (!values.lookingForAJobDescription) {\n            errors.lookingForAJobDescription = 'Please, write your skills'\n          }\n          if (!values.aboutMe) {\n            errors.aboutMe = 'Tell something about you'\n          }\n          return errors\n        }}\n        render={({\n          submitError,\n          handleSubmit,\n          submitting,\n        }) => (\n          <form onSubmit={handleSubmit}>\n\n            <Field name=\"fullName\">\n              {({ input, meta }) => (\n                <div>\n                  <label>Enter full name</label>\n                  <input {...input} type=\"text\" placeholder=\"John Smith\" className='form-control' />\n                  {(meta.error || meta.submitError) && meta.touched && (\n                    <span className={style.textError}>{meta.error || meta.submitError}</span>\n                  )}\n                </div>\n              )}\n            </Field>\n\n\n            <Field\n              name=\"lookingForAJob\"\n              type='checkbox'>\n              {({ input, meta }) => (\n                <div className=\"form-check mt-2\">\n                  <input {...input} type=\"checkbox\" className='form-check-input' id=\"lookingForAJob\" />\n                  <label className='form-check-label' htmlFor='lookingForAJob'>Is looking for a job</label>\n                  {meta.error && meta.touched && <span className={style.textError}>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n\n            <Field name=\"lookingForAJobDescription\">\n              {({ input, meta }) => (\n                <div className=\"mt-2\">\n                  <label className='form-label' htmlFor='lookingForAJobDescription'>Job description</label>\n                  <input {...input} type=\"text\" placeholder=\"Skills\" className='form-control' id='lookingForAJobDescription' />\n                  {meta.error && meta.touched && <span className={style.textError}>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n\n            <Field name=\"aboutMe\">\n              {({ input, meta }) => (\n                <div className=\"mt-2\">\n                  <label className='form-label' htmlFor='aboutMe'>About me</label>\n                  <input {...input} type=\"text\" placeholder=\"Something interesting about you\" className='form-control' id='aboutMe' />\n                  {meta.error && meta.touched && <span className={style.textError}>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n\n            <div className=\"mt-2\">\n              <b>Contacts</b>:\n                {Object.keys(profile.contacts).map(key => {\n                return <div key={key}>\n                  <Field name={`contacts.${key}`}>\n                    {({ input }) => (\n                      <div>\n                        <input {...input} type=\"text\" placeholder={`Your ${key} link`} className={submitError?.toLowerCase().includes(key) ? `form-control text-danger is-invalid ` : 'form-control'} />\n                      </div>)}\n                  </Field>\n                </div>\n              })}\n            </div>\n\n            {submitError && <div className={style.textError}>{submitError.split('(')[0]}</div>}\n\n            <div className=\"mt-2\">\n              <button type=\"submit\" disabled={submitting} className='btn btn-primary'> Save </button>\n            </div>\n          </form>\n        )}\n      />\n    </div>\n  )\n}\n\nexport default ProfileDataForm\n","import React, { useState } from 'react';\nimport style from './ProfileInfo.module.css';\nimport wallpaper from './../../img/wall.jpg'\nimport Preloader from '../../common/preloader/Preloader';\nimport ProfileStatus from './ProfileStatus';\nimport ProfileDataForm from './ProfileDataForm';\n\nconst ProfileInfo = (props) => {\n\n    const {\n        isOwner,\n        savePhoto,\n        saveProfile,\n        profile,\n        userStatus,\n        getUpdateStatus\n    } = props;\n\n    const [editMode, setEditMode] = useState(false)\n\n    const onSubmit = async data => {\n        const res = await saveProfile(data)\n        if (res) {\n            return res\n        }\n        setEditMode(false)\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0])\n        }\n    }\n\n    if (!profile) {\n        return (\n            <Preloader />\n        )\n    }\n    return (\n        <>\n            <div\n                className={style.wallpaper}\n                style={{\n                    backgroundImage: `url(${profile.photos.large || wallpaper})`\n                }}>\n                <div className={style.infoWrap}>\n                    <div className={style.wrap}>\n                        <div className={style.contentWrap}>\n                            <div className={style.imgWrap}>\n                                <img src={profile.photos.large || 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/7c/User_font_awesome.svg/1200px-User_font_awesome.svg.png'} alt=\"...\" />\n                                {isOwner && <div>\n                                    <input\n                                        type='file'\n                                        name='file'\n                                        id='file'\n                                        onChange={onMainPhotoSelected}\n                                        className={style.inputFile} />\n                                    <label htmlFor=\"file\"><div>Choose a photo</div></label>\n                                </div>}\n                            </div>\n                            <div>\n                                <ProfileStatus\n                                    userStatus={userStatus}\n                                    getUpdateStatus={getUpdateStatus}\n                                />\n                            </div>\n                            {editMode\n                                ? <ProfileDataForm profile={profile} onSubmit={onSubmit} />\n                                : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nconst Contact = ({ contactTitle, contactValue }) => {\n    if (contactValue) {\n        return <div>\n            <b>{contactTitle}</b>: {contactValue}\n        </div>\n    }\n    return <></>\n}\n\nconst ProfileData = ({ profile, goToEditMode, isOwner }) => {\n    return (\n        <div>\n            <h3>{profile.fullName}</h3>\n            <div>\n                <b>About me</b>: {profile.aboutMe}\n            </div>\n            <div>\n                <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\n            </div>\n            <div>\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\n            </div>\n            <div className=\"mt-2\">\n                <b>Contacts</b>\n                <div className={style.contacts}>\n                    {Object.keys(profile.contacts).map(key => {\n                        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\n                    })}\n                </div>\n            </div>\n            {isOwner && <div><button className='btn btn-light mt-2' onClick={goToEditMode}>edit</button></div>}\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport style from './Profile.module.css';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\n\nconst Profile = (props) => {\n\n    return (\n        <article className={style.article}>\n            <ProfileInfo\n                isOwner={props.isOwner}\n                savePhoto={props.savePhoto}\n                saveProfile={props.saveProfile}\n                profile={props.profile}\n                userStatus={props.userStatus}\n                getUpdateStatus={props.getUpdateStatus}\n            />\n            <MyPostsContainer />\n        </article>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport { getProfile, getStatus, getUpdateStatus, savePhoto, saveProfile } from '../../redux/profileReducer'\nimport { withRouter } from 'react-router-dom';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId\n            if (!userId) {\n                this.props.history.push('/login')\n            }\n        }\n        this.props.getProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\n            this.refreshProfile()\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Profile\n                    {...this.props}\n                    profile={this.props.profile}\n                    isOwner={!this.props.match.params.userId}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        userStatus: state.profilePage.userStatus,\n        isAuth: state.auth.isAuth,\n        authorizedUserId: state.auth.userId\n    }\n}\n\nexport default compose(\n    withAuthRedirect,\n    withRouter,\n    connect(\n        mapStateToProps,\n        {\n            saveProfile,\n            savePhoto,\n            getProfile,\n            getStatus,\n            getUpdateStatus\n        }\n    )\n)(ProfileContainer);","import { FORM_ERROR } from \"final-form\";\nimport { authAPI, securityAPI } from \"../api/api\"\n\nconst SET_USER_DATA = \"SET_USER_DATA\";\nconst SET_CAPTCHA_URL_SUCCESS = \"SET_CAPTCHA_URL_SUCCESS\"\n\nconst initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    captchaUrl: null\n}\n\nconst authReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case SET_USER_DATA:\n        case SET_CAPTCHA_URL_SUCCESS:\n            return {\n                ...state,\n                ...action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport const setAuthUserData = (userId, email, login, isAuth) => {\n    return { type: SET_USER_DATA, payload: { userId, email, login, isAuth } }\n}\n\nexport const setCaptchaUrlSuccess = (captchaUrl) => {\n    return { type: SET_CAPTCHA_URL_SUCCESS, payload: { captchaUrl } }\n}\n\nexport const getAuth = () => {\n    return async (dispatch) => {\n        try {\n            const res = await authAPI.me();\n            if (res.data.resultCode === 0) {\n                let { id, email, login } = res.data.data;\n                dispatch(setAuthUserData(id, email, login, true));\n            }\n        } catch (err) {\n            return console.error(err);\n        }\n    }\n}\n\nexport const getLogin = (email, password, rememberMe, captcha) => {\n    return async dispatch => {\n        try {\n            const res = await authAPI.login(email, password, rememberMe, captcha)\n            if (res.data.resultCode === 0) {\n                dispatch(getAuth())\n                return null\n            } else {\n                if (res.data.resultCode === 10) {\n                    dispatch(getCaptchaUrl())\n                }\n                return { [FORM_ERROR]: res.data.messages.length > 0 ? res.data.messages[0] : 'error' }\n            }\n        } catch (err) {\n            console.error(err)\n        }\n    }\n}\nexport const getCaptchaUrl = () => {\n    return async dispatch => {\n        try {\n            const res = await securityAPI.getCaptchaUrl()\n            const captchaUrl = res.data.url\n            dispatch(setCaptchaUrlSuccess(captchaUrl))\n        } catch (err) {\n            console.error(err)\n        }\n    }\n}\nexport const getLogout = () => {\n    return async dispatch => {\n        try {\n            const res = await authAPI.logout()\n            if (res.data.resultCode === 0) {\n                dispatch(setAuthUserData(null, null, null, false))\n            }\n        } catch (err) {\n            console.error(err)\n        }\n    }\n}\n\nexport default authReducer;","import React from 'react';\nimport style from './FormControls.module.css'\n\nexport const Input = ({ meta, input, ...props }) => {\n\n    const hasError = meta.touched && meta.error\n\n    return (\n        <div className={`${style.formControl} ${hasError && style.error}`}>\n            <div>\n                <input {...input} {...props} />\n            </div>\n            { hasError && <span>{meta.error}</span>}\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getLogin } from '../../redux/authReducer';\nimport { Form, Field } from 'react-final-form'\nimport { composeValidators, required, maxLengthCreator, minLength } from '../../util/validators';\nimport { Input } from '../FormsControls/FormsControls';\nimport { Redirect } from 'react-router-dom';\n\n\nconst LoginForm = () => {\n\n    const dispatch = useDispatch()\n    const isAuth = useSelector(state => state.auth.isAuth)\n    const captchaUrl = useSelector(state => state.auth.captchaUrl)\n\n    const onSubmit = data => {\n        const res = dispatch(getLogin(data.email, data.password, data.rememberMe, data.captcha))\n        if (res) {\n            return res\n        }\n    }\n\n    if (isAuth) return <Redirect to='/profile' />\n\n    return (\n        <>\n            <h1>Login</h1>\n            <Form\n                onSubmit={onSubmit}\n                render={({\n                    handleSubmit,\n                    submitError,\n                    submitting\n                }) => (\n                    <form onSubmit={handleSubmit}>\n\n                        <Field\n                            name='email'\n                            component={Input}\n                            validate={composeValidators(required, maxLengthCreator(20))}\n                            placeholder='email'\n                            type='email'\n                        />\n\n                        <Field\n                            name='password'\n                            component={Input}\n                            validate={composeValidators(required, maxLengthCreator(20), minLength(8))}\n                            placeholder='password'\n                            type='password'\n                        />\n\n                        <Field\n                            type={'checkbox'}\n                            name={'rememberMe'}\n                            component={'input'}\n                        /> Remember me\n\n                        {submitError && <div style={{ color: 'red' }}>{submitError}</div>}\n                        {captchaUrl && <img src={captchaUrl} alt='...' />}\n                        {captchaUrl && <Field\n                            name='captcha'\n                            component={Input}\n                            validate={required}\n                            placeholder='Captcha symbols'\n                            type='text'\n                        />}\n                        <div>\n                            <button type=\"submit\" disabled={submitting}>\n                                Submit\n                            </button>\n                        </div>\n                    </form>\n                )}\n            />\n        </>\n    )\n}\n\nexport default LoginForm;","import { getAuth } from \"./authReducer\";\n\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\n\nconst initialState = {\n    initialized: false\n}\n\nconst appReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n\n        default:\n            return state\n    }\n}\n\nconst setInitializedSuccess = () => {\n    return { type: INITIALIZED_SUCCESS }\n}\n\nexport const getInitializeApp = () => {\n    return async dispatch => {\n        try {\n            let promise = dispatch(getAuth())\n            await Promise.all([promise])\n            dispatch(setInitializedSuccess())\n        } catch (err) {\n            console.error(err)\n        }\n    }\n}\n\nexport default appReducer;","import React, { useState } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { NavLink } from \"react-router-dom\"\nimport { getLogout } from \"../../redux/authReducer\"\nimport style from '../Header/Header.module.css'\n\nconst LoginLogoutBTN = () => {\n\n    const dispatch = useDispatch()\n    const isAuth = useSelector(state => state.auth.isAuth)\n    const login = useSelector(state => state.auth.login)\n    const [hide, setHide] = useState(false)\n\n    return (\n        <div className={style.loginInput}>\n            {isAuth\n                ? <div className={style.btn}\n                    onMouseOver={() => setHide(true)}\n                    onMouseLeave={() => setHide(false)} >\n                    <div className={hide ? style.hide : null}>{login}</div>\n                    <div className={!hide ? style.hide : null} onClick={() => dispatch(getLogout())}>Logout</div>\n                </div>\n                : <NavLink to='/login'><div className={style.btn + ' ' + style.login}>Login</div> </NavLink>}\n        </div>\n    )\n}\n\nexport default LoginLogoutBTN;","import React from 'react';\nimport style from './Header.module.css';\nimport LoginLogoutBTN from '../Login/LoginLogoutBTN';\n\nconst Header = () => {\n\n    return (\n        <div className={style.header}>\n            <div className={style.headerText}>The orbit</div>\n            <div className={style.loginNL}>\n                <LoginLogoutBTN />\n            </div>\n        </div>\n    )\n}\n\nexport default Header;\n","import React, { lazy, useEffect, Suspense } from 'react';\nimport './components/css/App.css';\nimport Footer from './components/Footer/Footer';\nimport Nav from './components/Nav/Nav';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport Shuffle from './components/Shuffle/Shuffle';\nimport {\n  HashRouter,\n  Redirect,\n  Route\n} from 'react-router-dom'\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport LoginForm from './components/Login/LoginForm';\nimport { getInitializeApp } from './redux/appReducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Preloader from './components/common/preloader/Preloader';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport Header from './components/Header/Header';\n\nconst UsersContainer = lazy(() => import('./components/Users/UsersContainer'))\nconst Messages = lazy(() => import('./components/Messages/Messages'))\n\nconst App = () => {\n\n  const initialized = useSelector(state => state.app.initialized)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getInitializeApp())\n  }, [dispatch])\n\n  if (!initialized) {\n    return <Preloader />\n  }\n  return (\n    <div>\n      <div className=\"grid\">\n        <HashRouter>\n          <Header />\n          <Nav />\n          <div className='content'>\n            <Route exact path='/'>\n              <Redirect to={'/profile'} />\n            </Route>\n            <Route path='/profile/:userId?' component={ProfileContainer} />\n            <Route\n              path='/messages'\n              render={() => {\n                return <Suspense fallback={<div> Loading... </div>}>\n                  <Messages />\n                </Suspense>\n              }} />\n            <Route\n              path='/users'\n              render={() => {\n                return <Suspense fallback={<div> Loading... </div>}>\n                  <UsersContainer />\n                </Suspense>\n              }} />\n            <Route path='/news' component={News} />\n            <Route path='/music' component={Music} />\n            <Route path='/settings' component={Settings} />\n            <Route path='/shuffle' component={Shuffle} />\n            <Route path='/login' component={LoginForm} />\n            <Route path='*'>\n              <div>404 Not found</div>\n            </Route>\n          </div>\n          <Footer />\n        </HashRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {}\n\nconst sidebarReducer = (store = initialState, action) => {\n\n    return store;\n}\n\nexport default sidebarReducer;","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport profileReducer from './profileReducer';\nimport dialogsReducer from './dialogsReducer';\nimport sidebarReducer from './sidebarReducer';\nimport usersReducer from './usersReducer';\nimport authReducer from './authReducer';\nimport { reducer as formReducer } from 'redux-form';\nimport appReducer from './appReducer';\n\nconst reducers = combineReducers({\n    profilePage: profileReducer,\n    messagePage: dialogsReducer,\n    sidebarPage: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    app: appReducer,\n    form: formReducer\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\n\nwindow.__store__ = store;\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './components/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const composeValidators = (...validators) => value =>\n    validators.reduce((error, validator) => error || validator(value), undefined)\n\n\n// export const required = value => (value ? undefined : 'Field must by filled')\n\nexport const mustBeNumber = value => (isNaN(value) ? 'Must be a number' : undefined)\n\nexport const minValue = min => value =>\n    isNaN(value) || value >= min ? undefined : `Should be greater than ${min}`\n    \nexport const minLength = min => value =>\n    value.length >= min ? undefined : `Should be longer than ${min} symbols`\n    \nexport const required = (value) => {\n    if (value) return undefined\n    return `Field must by filled`\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `max length is ${maxLength} symbols`\n    return undefined\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block1\":\"Shuffle_block1__1oK62\",\"block2\":\"Shuffle_block2__12wYk\",\"block3\":\"Shuffle_block3__1wbVM\",\"block4\":\"Shuffle_block4__3rcjM\"};","import React from 'react';\nimport style from './Preloader.module.css';\n// import loading from '../../../assets/images/loading.gif';\n\nconst Preloader = () => {\n    return (\n        <div className={style.preloaderWrap}>\n            {/* <img src={loading} alt='...' /> */}\n            <h1>Preloader</h1>\n        </div>\n    )\n}\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"MyPosts_wrap__WP9pz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControls_error__2zpah\",\"formSumError\":\"FormControls_formSumError__22XPT\"};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nconst mapStateToPropsWithRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n\n    const RedirectComponent = (props) => {\n        if (!props.isAuth) return <Redirect to={'/login'} />\n        return <Component {...props} />\n    }\n    const ConnectedAuthRedirectComponent = connect(mapStateToPropsWithRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n}\n\n","const ADD_MESSAGE = \"ADD_MESSAGE\";\n\nexport const addMessage = (body) => {\n    return { type: ADD_MESSAGE, body }\n}\n\nconst initialState = {\n    dialogsData: [\n        { id: 1, name: \"Bogdan\" },\n        { id: 2, name: \"Vera\" },\n        { id: 3, name: \"Nadezhda\" },\n        { id: 4, name: \"Lyubov\" }\n    ],\n    messagesData: [\n        { m: \"First message to Dev\" },\n        { m: \"Second random message\" },\n        { m: \"Third crazy message\" }\n    ]\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case ADD_MESSAGE: {\n            let newMessage = {\n                m: action.body\n            }\n            let stateCopy = { ...state }\n            stateCopy.messagesData = [...state.messagesData]\n            stateCopy.messagesData.push(newMessage)\n            return stateCopy\n        }\n\n        default:\n            return state\n    }\n}\n\nexport default dialogsReducer;","import Axios from \"axios\"\n\nconst instance = Axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    withCredentials: true,\n    headers: {\n        'API-KEY': '578a5f36-0f95-4a91-a1d4-86904b25ee94'\n    }\n});\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 5) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n}\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/${userId}`)\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId)\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, { status: status })\n    },\n    savePhoto(file) {\n        const formData = new FormData()\n        formData.append('image', file)\n\n        return instance.put(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n    },\n    saveProfile(profile) {\n        return instance.put(`profile`, profile)\n    }\n}\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`)\n    },\n    login(email, password, rememberMe = false, captcha = null) {\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha })\n    },\n    logout() {\n        return instance.delete(`auth/login`)\n    }\n}\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`security/get-captcha-url`)\n    }\n}\n","export const updateObjInArr = (items, itemId, objPropName, newObjProps) => {\n    return items.map(el => {\n        if (el[objPropName] === itemId) {\n            return { ...el, ...newObjProps }\n        }\n        return el\n    })\n}","import { usersAPI } from \"../api/api\";\nimport { updateObjInArr } from \"../util/objectHelper\";\n\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nconst SET_FOLLOWING_PROGRESS = \"SET_FOLLOWING_PROGRESS\";\n\nconst initialState = {\n    users: [],\n    pageSize: 9,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    isFollowingProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case FOLLOW:\n            return { ...state, users: updateObjInArr(state.users, action.userId, 'id', { followed: true }) }\n\n        case UNFOLLOW:\n            return { ...state, users: updateObjInArr(state.users, action.userId, 'id', { followed: false }) }\n\n        case SET_USERS:\n            return { ...state, users: action.users }\n\n        case SET_CURRENT_PAGE:\n            return { ...state, currentPage: action.currentPage }\n\n        case SET_TOTAL_USERS_COUNT:\n            return { ...state, totalUsersCount: action.totalUsersCount }\n\n        case TOGGLE_IS_FETCHING:\n            return { ...state, isFetching: action.isFetching }\n\n        case SET_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                isFollowingProgress: action.isFetching\n                    ? [...state.isFollowingProgress, action.userId]\n                    : state.isFollowingProgress.filter(id => id !== action.userId)\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const followSuccess = (userId) => {\n    return { type: FOLLOW, userId }\n}\nexport const unfollowSuccess = (userId) => {\n    return { type: UNFOLLOW, userId }\n}\nexport const setUsers = (users) => {\n    return { type: SET_USERS, users }\n}\nexport const setCurrentPage = (currentPage) => {\n    return { type: SET_CURRENT_PAGE, currentPage }\n}\nexport const setTotalUsersCount = (totalUsersCount) => {\n    return { type: SET_TOTAL_USERS_COUNT, totalUsersCount }\n}\nexport const toggleIsFetching = (isFetching) => {\n    return { type: TOGGLE_IS_FETCHING, isFetching }\n}\nexport const setFollowingProgress = (isFetching, userId) => {\n    return { type: SET_FOLLOWING_PROGRESS, isFetching, userId }\n}\n\nexport const getUsers = (currentPage, pageSize) => {\n    return async dispatch => {\n        dispatch(toggleIsFetching(true))\n        dispatch(setCurrentPage(currentPage))\n        try {\n            const data = await usersAPI.getUsers(currentPage, pageSize)\n            dispatch(setUsers(data.data.items))\n            dispatch(setTotalUsersCount(data.data.totalCount))\n            dispatch(toggleIsFetching(false))\n        } catch (err) {\n            console.error(err)\n            dispatch(toggleIsFetching(false))\n        }\n    }\n}\n\nconst followUnfollowFlow = async (userId, dispatch, apiMethod, actionCreator) => {\n    dispatch(setFollowingProgress(true, userId))\n    try {\n        const res = await apiMethod(userId)\n        if (res.data.resultCode === 0) {\n            dispatch(actionCreator(userId))\n        }\n        dispatch(setFollowingProgress(false, userId))\n    } catch (err) {\n        console.error(err)\n        dispatch(setFollowingProgress(false, userId))\n    }\n}\n\nexport const unfollow = userId => {\n    return async dispatch => {\n        followUnfollowFlow(userId, dispatch, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\n    }\n}\nexport const follow = userId => {\n    return async dispatch => {\n        followUnfollowFlow(userId, dispatch, usersAPI.follow.bind(usersAPI), followSuccess)\n    }\n}\n\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1w0lV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__2LHtf\",\"wallpaper\":\"ProfileInfo_wallpaper__1teYi\",\"wrap\":\"ProfileInfo_wrap__28CmP\",\"contentWrap\":\"ProfileInfo_contentWrap__2xrQI\",\"imgWrap\":\"ProfileInfo_imgWrap__2Rzls\",\"inputFile\":\"ProfileInfo_inputFile__1x-DX\",\"contacts\":\"ProfileInfo_contacts__3y62P\",\"textError\":\"ProfileInfo_textError__1yN2m\",\"profileStatus\":\"ProfileInfo_profileStatus__SCSPz\",\"formWrap\":\"ProfileInfo_formWrap__2UY7a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderWrap\":\"Preloader_preloaderWrap__2ytu8\"};"],"sourceRoot":""}